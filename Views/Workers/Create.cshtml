@model Worker

@{
    ViewData["Title"] = "Create";

}


<h1>Create</h1>



<h4>Worker</h4>
<hr />
<div class="row">



    <div class="col-md-4">
        <form asp-action="Create" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label>Select Services (Max 5):</label>
                <select id="selectServices" class="form-control select2" multiple size="4" name="Service_Id">
                    @foreach (var service in ViewBag.Services)
                    {
                        <option value="@service.Value">@service.Text</option>
                    }
                </select>
                <span class="text-danger"></span>
            </div>

            <div class="form-group">

                <label class="control-label">Profile Picture:</label>
                <input type="file" name="ProfilePicFile" class="form-control" accept="image/*" onchange="previewImage(event)" />
                <span asp-validation-for="ProfilePic_Id" class="text-danger"></span>

               
                <div class="mt-3">
                    <img id="profilePicPreview" class="img-thumbnail" width="150" style="display:none;" />
                </div>
            </div>
            <h4 class="mt-4">Or Capture from Webcam:</h4>
            <div class="form-group">
                <!-- Webcam video stream -->
                <video id="webcam" autoplay playsinline width="320" height="240" style="border:1px solid #ddd;"></video>

                <!-- Canvas to capture the photo -->
                <canvas id="canvas" width="320" height="240" style="display:none;"></canvas>

                <button type="button" id="captureButton" class="btn btn-primary mt-2">Capture</button>
            </div>

            <!-- Preview of the captured or uploaded image -->
            <div class="form-group mt-3">
                <h4>Image Preview:</h4>
                <img id="imagePreview" class="img-thumbnail" width="150" style="display:none;" />
            </div>

            <!-- Hidden input to store the captured image as base64 -->
            <input type="hidden" name="CapturedImage" id="capturedImageInput" />
          
           
            <div class="form-group">
                <label asp-for="Price" class="control-label">Price:</label>
                <input asp-for="Price" class="form-control" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>
           
            <div class="form-group">
                <button type="submit" class="btn btn-primary"  >Create</button>

            </div>
        </form>
    </div></div>

<div>
    <a asp-action="Index" class="btn btn-secondary">Back to List</a>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
    <!-- Include Select2 CSS and JavaScript -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/css/select2.min.css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/js/select2.min.js"></script>

    
    <script>
        const webcam = document.getElementById('webcam');
        const canvas = document.getElementById('canvas');
        const imagePreview = document.getElementById('imagePreview');
        const capturedImageInput = document.getElementById('capturedImageInput');

        // Initialize webcam stream
        async function startWebcam() {
            try {
                const stream = await navigator.mediaDevices.getUserMedia({ video: true });
                webcam.srcObject = stream;
            } catch (error) {
                console.error("Webcam access denied:", error);
                alert("Please allow access to the webcam.");
            }
        }

        // Capture the image from the webcam
        document.getElementById('captureButton').addEventListener('click', function () {
            const context = canvas.getContext('2d');
            context.drawImage(webcam, 0, 0, canvas.width, canvas.height);

            // Convert the image to a base64 string
            const imageDataUrl = canvas.toDataURL('image/png');
            imagePreview.src = imageDataUrl;
            imagePreview.style.display = 'block';

            // Store the base64 string in the hidden input field
            capturedImageInput.value = imageDataUrl;
        });

        // Preview the uploaded image
        function previewUploadedFile(event) {
            const input = event.target;
            if (input.files && input.files[0]) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    imagePreview.src = e.target.result;
                    imagePreview.style.display = 'block';
                };
                reader.readAsDataURL(input.files[0]);
            }
        }

        
        window.onload = startWebcam;
        $(document).ready(function() {
            $('.select2').select2({
                maximumSelectionLength: 5
            });
        });
        function previewImage(event) {
            const input = event.target;
            const preview = document.getElementById('profilePicPreview');

            if (input.files && input.files[0]) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    preview.src = e.target.result;
                    preview.style.display = 'block'; // Show the preview image
                };
                reader.readAsDataURL(input.files[0]);
            }
        }
    </script>
}

