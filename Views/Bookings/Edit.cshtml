@model ServiceWorkerWebsite.Models.Booking

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Booking</h4>
<hr />
<div class="row">
    <div class="col-md-6">
        <form asp-action="Edit" id="bookingForm">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <input type="hidden" asp-for="Worker_Id" value="@Model.Worker_Id" />
            <input type="hidden" asp-for="Service_Id" value="@Model.Service_Id" />
        <input type="hidden" asp-for="TimeSlotId" value="@ViewData["TimeSlotId"]" />


            <!-- Calendar Date Picker -->
            <div class="form-group">
                <label for="BookingDate">Select Date</label>
                <input type="text" class="form-control custom-datepicker" id="BookingDate" readonly />
            </div>

            <!-- Time Slot Picker -->
            <div class="form-group">
                <label for="TimeSlotId">Select Time Slot</label>
                <div class="time-slot-container" id="TimeSlotContainer">
                    <div class="time-slot" data-value="">Please select a time slot</div>
                </div>
            </div>

            <!-- Current Booking Section -->
            <div id="CurrentTimeSlot" style="display: none; margin-top: 20px;">
                <h4>Current Booking</h4>
                <p>Date: <span id="CurrentTimeSlotDate"></span></p>
                <p>Time Slot: <span id="CurrentTimeSlotValue"></span></p>
            </div>

            <!-- Terms and Conditions -->
            <div class="form-group form-check">
                <input type="checkbox" class="form-check-input" id="agreeToTerms" asp-for="AgreeToTerms" />
                <label class="form-check-label" for="agreeToTerms">I agree to the Terms and Conditions</label>
                <span asp-validation-for="AgreeToTerms" class="text-danger"></span>
            </div>

            <!-- Submit -->
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<!-- Custom Styles and Script Section -->
@section Scripts {
    <!-- Flatpickr CSS and JS -->
    <link href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var workerId = document.getElementById("Worker_Id").value;
            var serviceId = document.getElementById("Service_Id").value;
            var TimeSlotId = document.getElementById("TimeSlotId").value;

           

            // Fetch available slots and initialize calendar
            fetch('/Bookings/EditAvailableSlots', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.getElementsByName('__RequestVerificationToken')[0].value
                },
                body: JSON.stringify({ workerId: parseInt(workerId), serviceId: parseInt(serviceId), TimeSlotId: parseInt(TimeSlotId) })
            })
                .then(response => response.json())
                .then(data => {
                    console.log("Available Slots Data:", data); // Log the fetched data to inspect

                    if (data.availableSlots.length === 0) {
                        console.error('No available slots found for this worker.');
                        return;
                    }

                    // Initialize Flatpickr
                    flatpickr("#BookingDate", {
                        enable: data.availableSlots.map(item => item.date),
                        onChange: function (selectedDates) {
                            var selectedDate = selectedDates[0].toISOString().split('T')[0];
                            console.log("Selected Date:", selectedDate); // Log the selected date
                            loadTimeSlots(selectedDate, data.availableSlots, data.currentBooking);
                        },
                        defaultDate: new Date(),
                        inline: true,
                        dateFormat: "Y-m-d",
                        showMonths: 1,
                        disableMobile: true
                    });

                    // Check if currentBooking exists and display it
                    if (data.currentBooking) {
                        console.log("Current Booking Data:", data.currentBooking); // Log current booking data
                        document.getElementById("CurrentTimeSlot").style.display = "block"; // Make the section visible
                        document.getElementById("CurrentTimeSlotDate").innerText = data.currentBooking.date; // Show current booking date
                        document.getElementById("CurrentTimeSlotValue").innerText = data.currentBooking.timeSlots;
                      
                    } else {
                        console.log("Current Booking is undefined."); // Log if current booking is undefined
                    }
                })
                .catch(error => console.error('Error fetching available slots:', error));
        });

        function loadTimeSlots(selectedDate, availableSlots, currentBooking) {
            var timeSlotContainer = document.getElementById("TimeSlotContainer");
            timeSlotContainer.innerHTML = '<div class="time-slot" data-value="">Please select a time slot</div>'; // Reset the container

            // Find the selected date's time slots
            var selectedData = availableSlots.find(d => d.date === selectedDate);

            if (!selectedData) {
                console.log("No time slots available for the selected date:", selectedDate);
                timeSlotContainer.innerHTML = '<div class="time-slot">No available time slots for this date.</div>';
                return;
            }

            var selectedTimeSlots = selectedData.timeSlots || [];
            console.log("Time slots for selected date:", selectedTimeSlots); // Log time slots for selected date

            // Sort time slots by their actual time
            selectedTimeSlots.sort((a, b) => a.timeSlots.localeCompare(b.timeSlots));

            selectedTimeSlots.forEach(function (slot) {
                var timeSlotDiv = document.createElement('div');
                timeSlotDiv.className = 'time-slot';
                timeSlotDiv.innerText = slot.timeSlots; // Display the time slot
                timeSlotDiv.dataset.value = slot.timeSlotId; // Set timeSlotId as value

                timeSlotDiv.addEventListener('click', function () {
                    document.querySelectorAll('.time-slot').forEach(slot => slot.classList.remove('selected'));
                    timeSlotDiv.classList.add('selected');
                    document.getElementById("TimeSlotId").value = timeSlotDiv.dataset.value; // Update hidden input with timeSlotId
                });

                timeSlotContainer.appendChild(timeSlotDiv);
            });

            // Highlight the current booking time slot without checking the selected date
            if (currentBooking) {
                const currentTimeSlot = selectedTimeSlots.find(slot => slot.timeSlotId === currentBooking.timeSlotId);
                if (currentTimeSlot) {
                    // Highlight the current booking time slot
                    const selectedSlotDiv = Array.from(timeSlotContainer.children).find(div => div.dataset.value == currentTimeSlot.timeSlotId);
                    if (selectedSlotDiv) {
                        selectedSlotDiv.classList.add('selected'); // Highlight it as selected
                        document.getElementById("TimeSlotId").value = currentTimeSlot.timeSlotId; // Set the hidden input value
                    }
                }
            }

            // Message for no available time slots
            if (selectedTimeSlots.length === 0) {
                var noSlotsDiv = document.createElement('div');
                noSlotsDiv.className = 'time-slot';
                noSlotsDiv.innerText = "No available time slots for this date.";
                timeSlotContainer.appendChild(noSlotsDiv);
            }
        }

        // Prevent form submission if the checkbox is not checked
        document.getElementById("bookingForm").addEventListener("submit", function (event) {
            var checkbox = document.getElementById("agreeToTerms");
            if (!checkbox.checked) {
                event.preventDefault(); // Prevent submission
                alert("You must agree to the terms and conditions before submitting the form.");
            }
        });
    </script>

    <!-- Custom Calendar Styling -->
    <style>
        /* Time Slot Container Styles */
        .time-slot-container {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
            gap: 10px;
            margin-top: 10px;
        }

        .time-slot {
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
            text-align: center;
            cursor: pointer;
            transition: background-color 0.3s, border-color 0.3s;
            background-color: #f7f7f7;
        }

            .time-slot:hover {
                background-color: #e2e2e2;
                border-color: #1e90ff;
            }

            .time-slot.selected {
                background-color: #1e90ff;
                color: #fff;
                border-color: #1e90ff;
            }
    </style>
}
