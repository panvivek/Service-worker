@model TimeSlot

@{
    ViewData["Title"] = "Create";
}

<div class="container my-5">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow-lg border-0 rounded-lg">
                <div class="card-header bg-purple text-white">
                    <h3 class="fw-bold my-4">Set Worker Availability</h3>
                </div>
                <div class="card-body">
                    <form asp-action="Create" method="post">
                        <div class="form-group mb-4">
                            <label for="Worker_Id" class="text-muted">Worker ID</label>
                            <input type="hidden" name="Worker_Id" value="@ViewBag.Worker_Id" class="form-control" readonly />
                        </div>

                        <div class="form-group mb-4">
                            <label for="SelectedDates" class="text-muted">Select Available Dates</label>
                            <input type="text" id="SelectedDates" name="SelectedDates" class="form-control custom-datepicker" placeholder="Select dates" />
                            <span class="text-danger" asp-validation-for="SelectedDates"></span>
                        </div>

                        <div class="form-group mb-4">
                            <label class="text-muted fw-bold">Select Time Periods</label>
                            <div class="d-flex justify-content-between align-items-center mb-2">
                                <span class="text-muted">Available Time Periods:</span>
                                <div class="form-check form-switch">
                                    <input type="checkbox" class="form-check-input" id="selectAllPeriods">
                                    <label class="form-check-label" for="selectAllPeriods">Select All</label>
                                </div>
                            </div>
                            <div class="btn-group-toggle d-flex flex-wrap" data-toggle="buttons" id="periodSelection">
                                <label class="btn btn-outline-purple m-1">
                                    <input type="checkbox" id="morning" autocomplete="off"> Morning (6 AM - 12 PM)
                                </label>
                                <label class="btn btn-outline-purple m-1">
                                    <input type="checkbox" id="afternoon" autocomplete="off"> Afternoon (12 PM - 6 PM)
                                </label>
                                <label class="btn btn-outline-purple m-1">
                                    <input type="checkbox" id="evening" autocomplete="off"> Evening (6 PM - 9 PM)
                                </label>
                                <label class="btn btn-outline-purple m-1">
                                    <input type="checkbox" id="night" autocomplete="off"> Night (9 PM - 6 AM)
                                </label>
                            </div>
                        </div>

                        <div class="form-group mb-4">
                            <label class="text-muted fw-bold">Select 45-Minute Time Slots</label>
                            <div class="d-flex justify-content-between align-items-center mb-2">
                                <span class="text-muted">Available Time Slots:</span>
                                <div class="form-check form-switch">
                                    <input type="checkbox" class="form-check-input" id="selectAllSlots">
                                    <label class="form-check-label" for="selectAllSlots">Select All</label>
                                </div>
                            </div>
                            <div id="timeSlotsContainer" class="form-control overflow-auto" style="height: 150px;">
                                <!-- Time slots will be dynamically added here with checkboxes -->
                            </div>
                        </div>

                        <div class="form-group mb-4">
                            <button type="submit" class="btn btn-purple btn-block">Submit Availability</button>
                        </div>
                    </form>
                </div>
                <div class="card-footer text-end">
                    <a asp-action="Index" class="btn btn-secondary">Back to List</a>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Html.RenderPartialAsync("_ValidationScriptsPartial")

    <!-- Flatpickr CSS and JS -->
    <link href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>

    <script>
        // Initialize Flatpickr
        flatpickr("#SelectedDates", {
            mode: "multiple",
            dateFormat: "Y-m-d",
            theme: "material_purple",
            onClose: function (selectedDates) {
                const datesString = selectedDates.map(date => date.toISOString().split('T')[0]).join(',');
                document.getElementById('SelectedDates').value = datesString;
            }
        });

        // Existing JavaScript for time period and time slots
        document.addEventListener('DOMContentLoaded', function () {
            const timeSlotsContainer = document.getElementById('timeSlotsContainer');
            const selectAllPeriodsCheckbox = document.getElementById('selectAllPeriods');
            const selectAllSlotsCheckbox = document.getElementById('selectAllSlots');
            const periodSelection = document.getElementById('periodSelection');

            const morningSlots = ['6:00-6:45 AM', '6:45-7:30 AM', '7:30-8:15 AM', '8:15-9:00 AM'];
            const afternoonSlots = ['12:00-12:45 PM', '12:45-1:30 PM', '1:30-2:15 PM', '2:15-3:00 PM'];
            const eveningSlots = ['6:00-6:45 PM', '6:45-7:30 PM', '7:30-8:15 PM', '8:15-9:00 PM'];
            const nightSlots = ['9:00-9:45 PM', '9:45-10:30 PM', '10:30-11:15 PM', '11:15-12:00 AM'];

            const periodSlotMap = {
                'morning': morningSlots,
                'afternoon': afternoonSlots,
                'evening': eveningSlots,
                'night': nightSlots
            };

            periodSelection.querySelectorAll('label').forEach(label => {
                label.querySelector('input').addEventListener('change', function () {
                    const period = this.id;
                    const slots = periodSlotMap[period];

                    if (this.checked) {
                        label.classList.add('active', 'btn-purple');
                        addTimeSlots(slots);
                    } else {
                        label.classList.remove('active', 'btn-purple');
                        removeTimeSlots(slots);
                    }

                    // Check if all period checkboxes are checked, then check the "Select All" checkbox
                    const allPeriodsChecked = periodSelection.querySelectorAll('input:checked').length === periodSelection.querySelectorAll('input').length;
                    selectAllPeriodsCheckbox.checked = allPeriodsChecked;
                });
            });

            function addTimeSlots(slots) {
                slots.forEach(slot => {
                    const slotDiv = document.createElement('div');
                    slotDiv.classList.add('form-check', 'form-check-inline', 'm-1');

                    const input = document.createElement('input');
                    input.type = 'checkbox';
                    input.classList.add('form-check-input', 'slot-checkbox');
                    input.id = slot;
                    input.value = slot;
                    input.name = 'TimeSlots';

                    const label = document.createElement('label');
                    label.classList.add('form-check-label');
                    label.htmlFor = slot;
                    label.textContent = slot;

                    slotDiv.appendChild(input);
                    slotDiv.appendChild(label);

                    timeSlotsContainer.appendChild(slotDiv);
                });
            }

            function removeTimeSlots(slots) {
                slots.forEach(slot => {
                    const checkbox = document.getElementById(slot);
                    if (checkbox) {
                        timeSlotsContainer.removeChild(checkbox.parentElement);
                    }
                });
            }

            selectAllSlotsCheckbox.addEventListener('change', function () {
                const slotCheckboxes = document.querySelectorAll('.slot-checkbox');
                slotCheckboxes.forEach(checkbox => {
                    checkbox.checked = selectAllSlotsCheckbox.checked;
                });
            });

            // Select All Periods functionality
            selectAllPeriodsCheckbox.addEventListener('change', function () {
                const periodCheckboxes = periodSelection.querySelectorAll('input');
                periodCheckboxes.forEach(checkbox => {
                    checkbox.checked = selectAllPeriodsCheckbox.checked;
                    const label = checkbox.parentElement;
                    if (selectAllPeriodsCheckbox.checked) {
                        label.classList.add('active', 'btn-purple');
                        addTimeSlots(periodSlotMap[checkbox.id]);
                    } else {
                        label.classList.remove('active', 'btn-purple');
                        removeTimeSlots(periodSlotMap[checkbox.id]);
                    }
                });
            });
        });
    </script>

    <style>
        /* Purple Theme Colors */
        .bg-purple {
            background-color: #6a1b9a !important;
        }

        .btn-purple {
            background-color: #8e24aa !important;
            border-color: #8e24aa !important;
            color: #fff !important;
        }

        .btn-purple:hover {
            background-color: #7b1fa2 !important;
            border-color: #7b1fa2 !important;
        }

        .btn-outline-purple {
            color: #6a1b9a !important;
            border-color: #6a1b9a !important;
        }

        .btn-outline-purple.active, .btn-outline-purple:hover {
            background-color: #6a1b9a !important;
            color: #fff !important;
        }

        /* Flatpickr Custom Styles */
        .custom-datepicker .flatpickr-day.selected,
        .custom-datepicker .flatpickr-day.startRange,
        .custom-datepicker .flatpickr-day.endRange {
            background: #8e24aa !important;
            border-color: #8e24aa !important;
        }

        .form-check-input:checked {
            background-color: #6a1b9a !important;
            border-color: #6a1b9a !important;
        }

        .card {
            border-radius: 15px;
            overflow: hidden;
        }

        .form-control {
            border-radius: 8px;
        }
    </style>
}